{
    "0": "SELECT COUNT(*) FROM customers WHERE Currency = 'EUR' / COUNT(*) FROM customers WHERE Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT c.CustomerID, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '2012-01-01' AND ym.Segment = 'LAM' ORDER BY ym.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) FROM yearmonth WHERE Segment = 'SME' AND YEAR(Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n            YEAR(Date) AS Year,\n            MONTH(Date) AS Month,\n            SUM(Consumption) AS TotalConsumption\n        FROM\n            yearmonth\n        WHERE\n            Date BETWEEN '2012-01-01' AND '2012-12-31'\n            AND Currency IN ('CZK', 'EUR')\n        GROUP BY\n            YEAR(Date),\n            MONTH(Date),\n            Currency;\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT YEAR(Date), MONTH(Date), MAX(Consumption) FROM yearmonth WHERE Country = 'CZ' AND Currency = 'CZK' GROUP BY YEAR(Date), MONTH(Date);\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT EXTRACT(MONTH FROM Date) AS Month, MAX(Consumption) AS Peak FROM \"yearmonth\" WHERE Segment = 'SME' AND YEAR(Date) = 2013 GROUP BY Month;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT YEAR(Date) AS Year, MONTH(Date) AS Month, AVG(Consumption) AS AvgConsumption FROM yearmonth WHERE Date BETWEEN '2013-01-01' AND '2013-12-31' GROUP BY Year(Date), Month(Date) ORDER BY Year(Date), Month(Date);\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, AVG(PercentageChange) as AvgPercentageChange FROM (SELECT Segment, (Consumption - LAST_YEAR(Consumption)) * 100.0 / LAST_YEAR(Consumption) as PercentageChange FROM yearmonth WHERE Date BETWEEN '2012-01-01' AND '2013-12-31') AS SegmentConsumption GROUP BY Segment ORDER BY AvgPercentageChange DESC LIMIT 2) AS SegmentConsumption GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT COUNT(*) FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount' - COUNT(*) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount';\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM \"yearmonth\" WHERE CustomerID = 10001) FROM \"yearmonth\" WHERE CustomerID = 10001 AND Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT COUNT(*) FROM \"yearmonth\" WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'Premium' AND Currency = 'USD' AND Date = '2012-02-01') AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE YEAR(Date) = 2012;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description FROM products INNER JOIN \"yearmonth\" ON products.ProductID = \"yearmonth\".ProductID WHERE \"yearmonth\".Date = '2013-09-01';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Date = '2013-06-01' AND Time BETWEEN '00:00:00' AND '23:59:59');\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(*) FROM customers WHERE Segment = 'Euro' AND (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID = customers.CustomerID AND Date LIKE '2022-01%') > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE g.Country = 'Czech Republic' JOIN products p ON t.ProductID = p.ProductID;\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT TIME FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM \"transactions_1k\" WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'Convenience Store') AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.Nationality FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'Europe' AND Currency = 'EUR' AND YEAR(Date) = 2012 AND MONTH(Date) = 8 AND DATE(Date) = 25;\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (Consumption - (SELECT Consumption FROM yearmonth WHERE CustomerID = 123456789 AND Date = '2013-08-25')) / (SELECT Consumption FROM yearmonth WHERE CustomerID = 123456789 AND Date = '2012-08-25') FROM yearmonth WHERE CustomerID = 123456789 AND Date BETWEEN '2012-08-01' AND '2013-08-31';\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (COUNT(*) FROM customers WHERE Segment = 'premium' AND Country = 'SVK') * 100.0 / (COUNT(*) FROM customers WHERE Country = 'SVK');\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.Amount) FROM \"transactions_1k\" t WHERE t.CustomerID = 38508 AND t.GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'USA'); SELECT SUM(y.Consumption) FROM \"yearmonth\" y WHERE y.CustomerID = 38508 AND y.Date = '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, AVG(p.Price) as AvgPrice, p.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID GROUP BY c.CustomerID ORDER BY AvgPrice DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT customers.Name, customers.Segment, yearmonth.Consumption FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID INNER JOIN products ON transactions_1k.ProductID = products.ProductID INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE products.ProductID = 5 AND transactions_1k.Amount > 29.00 AND transactions_1k.Date = '2012-08-01';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major_name FROM major JOIN member ON major.major_id = member.link_to_major WHERE first_name = 'Angela' AND last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) FROM member WHERE major = 'Student_Club' AND attendance = 'Women''s Soccer' AND t_shirt_size = 'medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) FROM attendance WHERE event_id IN (SELECT event_id FROM event WHERE type = 'Meeting' AND status = 'Active' AND attendees > 10 GROUP BY event_id) UNION ALL SELECT COUNT(*) FROM attendance WHERE event_id IN (SELECT event_id FROM event WHERE type = 'Meeting' AND status = 'Inactive' GROUP BY event_id)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE attendance > 20 AND type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT expense_id, expense_date, approved FROM expense WHERE expense_date = '2019-10-08' AND expense_date = 'October Meeting';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) FROM expense e WHERE e.approved = 'Yes' AND e.member_id = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND e.expense_date BETWEEN '2022-09-01' AND '2022-10-31';\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(b.spent) FROM budget b WHERE b.event_status = 'Student_Club' AND b.year BETWEEN 2019 AND 2020;\t----- bird -----\tstudent_club",
    "39": "SELECT event_name, notes FROM event WHERE event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT event_name, status FROM event WHERE type = 'Post Cards, Posters' AND event_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major FROM member WHERE member_id = 'Brent Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member WHERE major = 'Business' AND t_shirt_size = 'medium';\t----- bird -----\tstudent_club",
    "44": "SELECT department FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT member_id, date_received FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton';\t----- bird -----\tstudent_club",
    "46": "SELECT category, SUM(spent) FROM budget WHERE event_status = 'Yearly Kickoff' GROUP BY category HAVING SUM(spent) > (SELECT SUM(spent) FROM budget WHERE event_status = 'October Meeting');\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(p.cost) FROM pizza p JOIN event e ON p.event_id = e.event_id;\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name FROM member m WHERE m.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) FROM attendance WHERE link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT member_id, first_name, last_name FROM member WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT event_id, AVG(spent/remaining) as avg_spend_to_budget FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE status = 'closed' GROUP BY event_id ORDER BY avg_spend_to_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget WHERE event_status = 'completed';\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(expense.cost) FROM expense WHERE expense.expense_description = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.event_count > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT member_id, first_name, last_name FROM member WHERE position = 'Budget Manager' AND event_status = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT event_id, MIN(spent) FROM budget GROUP BY event_id;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(b.spent) * 100.0 / SUM(b.spent) FROM budget b WHERE b.event_status = 'Yearly Kickoff') FROM budget b;\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) FROM member WHERE link_to_major = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT event_name, SUM(spent) FROM budget WHERE category = 'Advertisement' GROUP BY event_name ORDER BY SUM(spent) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT * FROM attendance WHERE link_to_event = 'Women''s Soccer' AND link_to_member = 'Maya Mclean';\t----- bird -----\tstudent_club",
    "63": "SELECT SUM(cost) FROM event WHERE event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT event_name, MAX(spent - remaining) FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' GROUP BY event_name;\t----- bird -----\tstudent_club",
    "65": "SELECT expense_type, SUM(approved_value) FROM expense WHERE approved = 'Approved' AND event_date = 'October Meeting' GROUP BY expense_type;\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(spent) FROM budget WHERE event_status = 'April Speaker' GROUP BY category ORDER BY spent ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(e.cost) FROM expense e WHERE e.approved = 'Yes' AND e.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY member.first_name, member.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT category FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Environmental Engineering' AND major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT event.category, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.location = 'MU 215' AND budget.spent = 0 AND event.type = 'Guest Speaker';\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM member WHERE t_shirt_size = 'medium' AND position = 'Student_Club')) FROM member WHERE t_shirt_size = 'medium' AND position = 'Student_Club' AND income_id = 50;\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.first_name, member.last_name, member.phone;\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, SUM(expense.cost) FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('Water', 'Veggie Tray', 'Supplies') GROUP BY member.first_name, member.last_name;\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": "SELECT SUM(CASE WHEN Sex = 'Male' AND Admission = 'In-Patient' THEN 1 ELSE 0 END) AS InPatientMale, SUM(CASE WHEN Sex = 'Male' AND Admission = 'Out-Patient' THEN 1 ELSE 0 END) AS OutPatientMale, (SUM(CASE WHEN Sex = 'Male' AND Admission = 'In-Patient' THEN 1 ELSE 0 END) - SUM(CASE WHEN Sex = 'Male' AND Admission = 'Out-Patient' THEN 1 ELSE 0 END)) / SUM(CASE WHEN Sex = 'Male' THEN 1 ELSE 0 END) * 100 AS PercentageDeviation FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT SEX, PERCENTAGE(COUNT(*) FILTER (WHERE Birthday > '1930-01-01')) FROM Patient GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT SUM(CASE WHEN Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS Total_SLE_Patients, SUM(CASE WHEN Diagnosis = 'SLE' AND KCT = 'Outpatient' THEN 1 ELSE 0 END) AS Outpatient_SLE_Patients, SUM(CASE WHEN Diagnosis = 'SLE' AND KCT = 'Inpatient' THEN 1 ELSE 0 END) AS Inpatient_SLE_Patients FROM Examination JOIN Patient ON Examination.ID = Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.Sex, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 250;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT P.ID, P.AGE FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.`T-BIL` > 1.2;\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.Sex, Examination.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 3;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) FROM Patient WHERE SEX = 'Female' AND Admission = '1997' AND Diagnosis = 'Outpatient Clinic';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 5 AND Examination.`Examination Date` = '1997-01-01';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT EXAMINATION.Symptoms, EXAMINATION.Diagnosis FROM EXAMINATION JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.Birthday = (SELECT MIN(Birthday) FROM PATIENT)\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Patient.ID, Patient.Admission, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Diagnosis = 'SJS' ORDER BY Laboratory.Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT SUM(CASE WHEN GENDER = 'Male' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN GENDER = 'Female' THEN 1 ELSE 0 END) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE UA > 7.0;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*) FROM Examination WHERE Patient.Age < 18 AND Examination.Date BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT Patient.ID, Patient.Sex, Patient.Birthday, Patient.Description, Patient.Admission, Patient.Diagnosis, Laboratory.HGB, Laboratory.HCT FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID ORDER BY Laboratory.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Patient.ID, Laboratory.`Anti-Cardiolipin Antibody Concentration` FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (Laboratory.`T-CHO` FROM Laboratory WHERE Laboratory.ID = (SELECT Patient.ID FROM Patient WHERE Patient.Birthday = '1959-02-18') AND Laboratory.Date BETWEEN '1981-11-01' AND '1981-12-31') - (Laboratory.`T-CHO` FROM Laboratory WHERE Laboratory.ID = (SELECT Patient.ID FROM Patient WHERE Patient.Birthday = '1959-02-18') AND Laboratory.Date BETWEEN '1981-10-01' AND '1981-11-30') FROM Laboratory WHERE Laboratory.ID = (SELECT Patient.ID FROM Patient WHERE Patient.Birthday = '1959-02-18') AND Laboratory.Date BETWEEN '1981-11-01' AND '1981-12-31') * 100.0 / (Laboratory.`T-CHO` FROM Laboratory WHERE Laboratory.ID = (SELECT Patient.ID FROM Patient WHERE Patient.Birthday = '1959-02-18') AND Laboratory.Date BETWEEN '1981-10-01' AND '1981-11-30') * 100.0;\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Thrombosis = 2 AND ANA = 1 AND `aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination WHERE Thrombosis = 2 AND ANA = 1)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.Name, Laboratory.Date, Laboratory.T_BIL FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.FollowUp = 'Outpatient' AND Laboratory.Date = '1991-10-01' AND Laboratory.T_BIL BETWEEN 0.5 AND 1.5;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'Female' AND P.Diagnosis = 'SLE' AND L.PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'Female' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.Birthday = '1980-01-01' AND E.Diagnosis = 'RA' AND E.Sex = 'Female';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT Patient.ID, Laboratory.UA FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 57266 AND Laboratory.UA <= 7.2;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SEX = 'Male' AND GPT > 35;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.ID, Patient.Description, Laboratory.ALT FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALT > 40 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT ID, SEX, Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE UN BETWEEN 20 AND 30;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE T-BIL NOT BETWEEN 0.5 AND 1.2 GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(P.Age) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.Sex = 'Male' AND E.`T-CHO` > 200;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE TG > 150 AND Age > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND Patient.SEX = 'Male' AND Laboratory.CPK > 150;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.Sex, Patient.Birthday, DATEDIFF(year, Patient.Birthday, GETDATE()) AS Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU NOT BETWEEN 70 AND 110 AND Laboratory.T-CHO BETWEEN 120 AND 200;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT P.ID, P.AGE, D.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.RBC < 4.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT ID, SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Diagnosis = 'SLE' AND HGB > 120 AND HCT < 45;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, Patient.Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.HCT > 45;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE PLT < 150000;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.Name, Laboratory.Date, Laboratory.PLT FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Age < 50 AND Laboratory.PLT >= 150 AND Laboratory.Date = '1984-01-01';\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT SEX, PERCENTAGE(COUNT(*) FILTER (WHERE PT > 12)) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE AGE > 55 GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'Male' AND Laboratory.WBC > 4.0 AND Laboratory.FG > 300;\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE IgG > 1000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`aCL IgG` < 1000;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE IGA = 0 AND `First Date` > '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(*) FROM Examination WHERE `aCL IgM` > 100 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRP = 'Abnormal' AND Laboratory.Date IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Creatinine > 1.5 AND Age < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE ANA = 0 AND Admission = 'Hospital';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE ANA = 0 AND `ANA Pattern` = 'Normal' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ANA = 0 AND Examination.`ANA Pattern` = 'Normal' AND Patient.SEX = 'Female';\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(*) FROM Patient WHERE ANA = 0 AND ANA_PATTERN = 'Normal' AND ANA_SSB = 0 AND ANA_SSB_PATTERN = 'Normal' AND SEX = 'Male';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(P.Birthday) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU > 50;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CreatininePhosphokinase > 100 AND DegreeOfCoagulation = 'Positive';\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name, COUNT(m.id) as goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2016' GROUP BY l.name ORDER BY goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT away_team_api_id, COUNT(*) as wins FROM Match WHERE country_id = 1 AND league_id = 1 AND season = 2010 GROUP BY away_team_api_id ORDER BY wins DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.team_short_name, t.build_up_play_speed FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id ORDER BY t.build_up_play_speed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name, COUNT(m.id) as draw_count FROM League l JOIN Match m ON l.id = m.league_id WHERE m.date BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY l.name ORDER BY draw_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT player_name, age FROM Player WHERE sprint_speed >= 97 AND birthdate BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) as total_matches FROM League INNER JOIN Match ON League.id = Match.league_id GROUP BY League.name ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE build_up_play_speed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
    "135": "SELECT \"Team\".\"team_long_name\" FROM \"Team\" INNER JOIN \"Team_Attributes\" ON \"Team\".\"team_api_id\" = \"Team_Attributes\".\"team_api_id\" WHERE \"Team_Attributes\".\"date\" = '2012' AND \"Team_Attributes\".\"buildUpPlayPassing\" > 80;\t----- bird -----\teuropean_football_2",
    "136": "SELECT (COUNT(*) FROM Player WHERE preferred_foot = 'left' AND birthdate BETWEEN '1987-01-01' AND '1992-12-31') * 100.0 / (SELECT COUNT(*) FROM Player WHERE birthdate BETWEEN '1987-01-01' AND '1992-12-31');\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) as avg_heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.date BETWEEN '2009-08-01' AND '2010-07-31' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.player_name FROM Player WHERE Player.birthday LIKE '1970-10%';\t----- bird -----\teuropean_football_2",
    "141": "SELECT AVG(rating) FROM Player_Attributes WHERE player_name = 'Gabriel Tamas' AND YEAR(date) = 2011;\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011' AND stage = 1 AND home_team_goal > 0;\t----- bird -----\teuropean_football_2",
    "143": "SELECT p.player_name, AVG(fa.finishing) FROM Player p JOIN Player_Attributes fa ON p.player_api_id = fa.player_api_id WHERE p.height = (SELECT MIN(h.height) FROM Player h) AND p.height = (SELECT MAX(h.height) FROM Player h) GROUP BY p.player_name ORDER BY AVG(fa.finishing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE overall_rating > 170 AND date BETWEEN '2010-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "145": "SELECT AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Abdou Diallo' - AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "146": "SELECT MAX(player_api_id) FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "147": "SELECT MAX(height) FROM Player;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'remain';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(*) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE birthday < '1986-01-01' AND position = 'Defender') AND attacking_work_rate = 'Low' AND defensive_work_rate = 'High';\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name FROM Player_Attributes WHERE volley > 70 AND dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE country_id = 1 AND league_id = 1 AND date LIKE '2009-04%';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name, COUNT(m.id) as matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.date BETWEEN '2008-07-01' AND '2009-06-30' GROUP BY l.name ORDER BY COUNT(m.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT (SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_fifa_api_idt----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino');\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chance_creation_passing) FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_short_name = 'Ajax') AND date = '2022-01-01';\t----- bird -----\teuropean_football_2",
    "156": "SELECT player_name, MAX(age) FROM Player_Attributes WHERE overall_rating = 77 AND date = '2016-06-23' GROUP BY player_name;\t----- bird -----\teuropean_football_2",
    "157": "SELECT \"Player_Attributes\".overall_rating FROM \"Player_Attributes\" WHERE \"Player_Attributes\".player_api_id = (SELECT \"Player\".player_api_id FROM \"Player\" WHERE \"Player\".player_name = 'Aaron Mooy' AND \"Player\".date = '2016/2/4')\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.player_api_id, Player_Attributes.attacking_work_rate FROM Player_Attributes WHERE Player_Attributes.date = '2015/5/1' AND Player_Attributes.player_api_id = (SELECT Player.player_api_id FROM Player WHERE Player.player_name = 'Francesco Migliore');\t----- bird -----\teuropean_football_2",
    "159": "SELECT MAX(crossing) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Kevin Constant' LIMIT 1);\t----- bird -----\teuropean_football_2",
    "160": "SELECT \"Team_Attributes\".`buildUpPlayPassingClass` FROM \"Team_Attributes\" INNER JOIN \"Team\" ON \"Team_Attributes\".`team_fifa_api_id` = \"Team\".`team_fifa_api_id` WHERE \"Team\".`team_short_name` = 'FC Lorient' AND \"Team_Attributes\".`date` = '2010/2/22';\t----- bird -----\teuropean_football_2",
    "161": "SELECT defence_aggression_class FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_short_name = 'Hannover 96' AND date = '2015/9/10')\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21');\t----- bird -----\teuropean_football_2",
    "163": "SELECT (MAX(Player_Attributes.overall_rating) WHERE Player_Attributes.player_name = 'Landon Donovan' AND Player_Attributes.date = '2013-07-12') - (MAX(Player_Attributes.overall_rating) WHERE Player_Attributes.player_name = 'Jordan Bowery' AND Player_Attributes.date = '2013-07-12') * 100.0 / (MAX(Player_Attributes.overall_rating) WHERE Player_Attributes.player_name = 'Jordan Bowery' AND Player_Attributes.date = '2013-07-12') AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name, strength FROM Player ORDER BY strength DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11 FROM Match WHERE stage = 1 AND (home_team_goal > 0 OR away_team_goal > 0) GROUP BY home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11;\t----- bird -----\teuropean_football_2",
    "167": "SELECT \"Team\".\"short_name\" FROM \"Team\" INNER JOIN \"Team_Attributes\" ON \"Team\".\"team_api_id\" = \"Team_Attributes\".\"team_api_id\" WHERE \"Team_Attributes\".\"buildUpPlaySpeed\" = 1;\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name = 'Aaron' AND birthdate > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT Player_Attributes.jumping FROM Player_Attributes WHERE Player_Attributes.player_api_id = 6) - (SELECT Player_Attributes.jumping FROM Player_Attributes WHERE Player_Attributes.player_api_id = 23) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes WHERE potential < 80 AND preferred_foot = 'right' ORDER BY potential ASC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes WHERE preferred_foot = 'left' AND attribute = 'crossing')\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal FROM Match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League');\t----- bird -----\teuropean_football_2",
    "173": "SELECT * FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_short_name = 'KSV Cercle Brugge') AND buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast');\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "175": "SELECT l.name, COUNT(m.id) as games FROM League l JOIN Match m ON l.id = m.league_id WHERE season = '2015-2016' GROUP BY l.name ORDER BY games DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT away_team_api_id, away_team_long_name FROM Match WHERE away_team_goal = (SELECT MAX(away_team_goal) FROM Match) GROUP BY away_team_api_id, away_team_long_name;\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name, overall_strength FROM Player_Attributes ORDER BY overall_strength DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT COUNT(*) FROM Player WHERE height < 180 AND overall_strength > 70;\t----- bird -----\teuropean_football_2",
    "179": "SELECT driverRef FROM drivers WHERE raceId = 20 AND grid > 10 AND grid <= 20 AND period = 1;\t----- bird -----\tformula_1",
    "180": "SELECT surname FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE raceId = 19 AND qualifyingPeriod = 2 AND fastestLap = 1;\t----- bird -----\tformula_1",
    "181": "SELECT name FROM circuits WHERE country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT location FROM circuits WHERE country = 'Australia';\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT qualifying.driverId, qualifying.q1 FROM qualifying WHERE qualifying.raceId = 354 AND qualifying.driverId = 30;\t----- bird -----\tformula_1",
    "185": "SELECT driver_id FROM results WHERE race_id = 903 AND qualifying_round = 3 AND time = '00:01:54' AND position = 0;\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) FROM results WHERE race_id = 1 AND status_id = 2;\t----- bird -----\tformula_1",
    "187": "SELECT driverId, MAX(dob) FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE raceId = 592 GROUP BY driverId;\t----- bird -----\tformula_1",
    "188": "SELECT driver.name, driver.url FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 161 AND results.lap = 1 AND results.time = '00:01:27';\t----- bird -----\tformula_1",
    "189": "SELECT location FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.name, c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 9 ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT driver.code FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 45 AND results.q3 = '0:01:33';\t----- bird -----\tformula_1",
    "192": "SELECT * FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "193": "SELECT driverId, MIN(dob) FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE raceId = 872 GROUP BY driverId;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN fastestLap f ON r.raceId = f.raceId WHERE f.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM fastestLap)\t----- bird -----\tformula_1",
    "195": "SELECT (MAX(f.lap_time) - MIN(n.lap_time)) * 100.0 / (MAX(f.lap_time) - MIN(n.lap_time)) FROM races r JOIN drivers d ON r.driver_id = d.driver_id JOIN constructors c ON d.constructor_id = c.constructor_id JOIN lap_times f ON r.race_id = f.race_id JOIN lap_times n ON r.race_id + 1 = n.race_id WHERE d.name = 'Paul di Resta' AND r.race_id = 853;\t----- bird -----\tformula_1",
    "196": "SELECT driver_id, COUNT(*) as total_drivers, COUNT(*) FILTER (WHERE finish_time IS NOT NULL) as finished_drivers FROM drivers JOIN results ON drivers.id = results.driver_id WHERE race_date = '1983-07-16' GROUP BY driver_id;\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE year = (SELECT MIN(year) FROM races) AND month = (SELECT MIN(month) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT driver.name, driver.forename, driver.surname, SUM(result.points) as total_points FROM drivers JOIN results ON drivers.driverId = results.driverId GROUP BY driver.name, driver.forename, driver.surname ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT driver.name, race.name, MIN(lapTimes.time) FROM drivers INNER JOIN races ON drivers.race_id = races.race_id INNER JOIN lapTimes ON drivers.driver_id = lapTimes.driver_id GROUP BY driver.name, race.name;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(time) FROM lapTimes WHERE raceId = 123 AND driverId = 456;\t----- bird -----\tformula_1",
    "201": "SELECT PERCENTAGE(COUNT(*) FILTER (WHERE NOT circuit = 'Monaco')) FROM circuits WHERE driver = 'Hamilton' AND year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT driver.name, driver.nationality, MAX(driverStandings.points) FROM driver INNER JOIN driverStandings ON driver.driverId = driverStandings.driverId WHERE driverStandings.position = 1 GROUP BY driver.name, driver.nationality;\t----- bird -----\tformula_1",
    "203": "SELECT MIN(d.dob) AS youngest_age, d.name FROM drivers d WHERE d.nationality = 'Japanese' GROUP BY d.name ORDER BY MIN(d.dob) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.date BETWEEN '2005-09-01' AND '2005-09-30';\t----- bird -----\tformula_1",
    "205": "SELECT r.name FROM races r JOIN results rr ON r.raceId = rr.raceId WHERE rr.number < 20 AND rr.driverId = (SELECT driverId FROM drivers WHERE forename = 'Alex' AND surname = 'Yoong');\t----- bird -----\tformula_1",
    "206": "SELECT r.name, r.year FROM races r JOIN results rr ON r.raceId = rr.raceId WHERE rr.driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND rr.fastestLap = 1;\t----- bird -----\tformula_1",
    "207": "SELECT drivers.driver_id, drivers.name, results.points FROM drivers INNER JOIN results ON drivers.driver_id = results.driver_id WHERE results.race_id = (SELECT race_id FROM races WHERE name = 'British Grand Prix' AND year = 2007) LIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT COUNT(*) FROM races WHERE country = 'Germany' AND continent = 'Europe';\t----- bird -----\tformula_1",
    "209": "SELECT location, lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT name FROM circuits WHERE location = 'Singapore';\t----- bird -----\tformula_1",
    "211": "SELECT country, MAX(dob) FROM drivers GROUP BY country ORDER BY MAX(dob) LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT driverRef FROM driverStandings WHERE raceId = (SELECT raceId FROM races WHERE year = 2007 AND round = 8 AND circuitRef = 'Canadian Grand Prix') AND position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT raceId, MAX(position) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE name = 'Lewis Hamilton') GROUP BY raceId;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(speed) FROM results WHERE race_id = 129 AND year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT r.driver_id, r.rank FROM results r WHERE r.race_id = 101 AND r.driver_id = 1;\t----- bird -----\tformula_1",
    "216": "SELECT driver_id, finish_time FROM results WHERE year = 2008 AND round = 1 AND position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(*) FROM drivers WHERE race_id = 1001 AND finished = 1 AND participated_in_formula_1 = 1;\t----- bird -----\tformula_1",
    "218": "SELECT (MAX(r.time) - MIN(r.time)) * 100.0 / MAX(r.time) FROM races r WHERE r.year = 2008 AND r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide, Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) FROM constructorStandings WHERE nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT constructor_name FROM constructor_results WHERE race_id = 291 AND points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) FROM constructors WHERE nationality = 'Japan' AND points = 0 AND raceId IN (SELECT raceId FROM races WHERE year = 2021 AND round = 1 OR year = 2021 AND round = 2)\t----- bird -----\tformula_1",
    "223": "SELECT d.driverId, d.name, (COUNT(r.raceId) * 100.0 / (SELECT COUNT(r.raceId) FROM races WHERE race_year BETWEEN 2007 AND 2009 AND driver_nationality = 'Japan')) as completion_percentage FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE driver_nationality = 'Japan' GROUP BY d.driverId, d.name;\t----- bird -----\tformula_1",
    "224": "SELECT year, AVG(time) FROM results WHERE year < 1975 GROUP BY year;\t----- bird -----\tformula_1",
    "225": "SELECT r.race_id, r.driver_id, r.fastest_lap FROM races r JOIN results rr ON r.race_id = rr.race_id JOIN drivers d ON rr.driver_id = d.driver_id WHERE r.year = 2009 AND d.status = 'Champion';\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastest_lap_speed) FROM results WHERE race_id = 101 AND year = 2009 AND circuit_id = 1;\t----- bird -----\tformula_1",
    "227": "SELECT YEAR(r.raceDate) AS year, COUNT(DISTINCT d.driverId) AS drivers, COUNT(DISTINCT l.lapNumber) AS laps FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN lapTimes l ON r.raceId = l.raceId WHERE YEAR(r.raceDate) BETWEEN 2000 AND 2005 AND d.dob < '1985-01-01' AND l.lapNumber > 50 GROUP BY YEAR(r.raceDate)\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) FROM drivers WHERE nationality = 'France' AND laptime < '02:00:00';\t----- bird -----\tformula_1",
    "229": "SELECT d.code FROM drivers d WHERE d.nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT driver.code, COUNT(*) FROM driver JOIN results ON driver.id = results.driverId WHERE results.position <= 3 AND results.age < 25 GROUP BY driver.code HAVING COUNT(*) > 1;\t----- bird -----\tformula_1",
    "231": "SELECT d.name, c.name FROM drivers d JOIN constructors c ON d.constructorId = c.constructorId WHERE d.nationality = 'German' ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT driverId, code FROM drivers WHERE dob = '1971-01-01' AND raceId = (SELECT raceId FROM races WHERE raceName = 'Race Name' ORDER BY time ASC LIMIT 1);\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = (SELECT statusId FROM status WHERE status = 'Disqualified');\t----- bird -----\tformula_1",
    "234": "SELECT c.name, c.location, c.lat, c.lng FROM circuits c WHERE c.country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT MIN(d.dob), MIN(q.raceId), q.name, q.date, q.time FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.position > 0 GROUP BY d.dob, q.raceId, q.name, q.date, q.time;\t----- bird -----\tformula_1",
    "236": "SELECT d.driver_id, AVG(ps.duration) as avg_duration FROM drivers d JOIN pit_stops ps ON d.driver_id = ps.driver_id WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driver_id ORDER BY avg_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT drivers.name, results.time FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' AND year = 2008) AND results.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.name, c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.year = 2009 AND r.circuitRef = 'Singapore' AND cr.status = 'Champion';\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name FROM superhero_power INNER JOIN superhero ON superhero_power.hero_id = superhero.id INNER JOIN superpower ON superhero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(r.points) FROM constructors c JOIN results r ON c.constructorId = r.constructorId WHERE r.raceId = (SELECT raceId FROM races WHERE circuitRef = 'Monaco' AND year BETWEEN 1980 AND 2010) GROUP BY c.name, c.nationality ORDER BY SUM(r.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 3 AND q.circuitId = 1 AND q.year = 2008 AND q.position = 1;\t----- bird -----\tformula_1",
    "242": "SELECT d.name, d.nationality, r.name FROM drivers d JOIN races r ON d.raceId = r.raceId ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM accidents WHERE driver_id = (SELECT driver_id FROM drivers WHERE name = (SELECT name FROM drivers WHERE nationality = 'Canada' AND number = (SELECT MAX(number) FROM drivers WHERE nationality = 'Canada')));\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname, MIN(rt.time) FROM drivers d JOIN results rt ON d.driverId = rt.driverId WHERE rt.raceId = (SELECT MAX(r.raceId) FROM races r WHERE r.year = 2021) GROUP BY d.forename, d.surname ORDER BY MIN(rt.time) LIMIT 1;\t----- bird -----\tformula_1",
    "245": "SELECT circuitRef, MAX(time) FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE country = 'Italy' GROUP BY circuitRef;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) FROM superhero WHERE superpower_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND power_id = (SELECT id FROM superpower WHERE power_name = 'Agility');\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye_colour' AND attribute.attribute_value = 2 AND attribute.attribute_name = 'hair_colour' AND attribute.attribute_value = 3;\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT superhero.superhero_name, COUNT(superhero_power.power_id) as count FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher_id = 1 GROUP BY superhero.superhero_name ORDER BY count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND publisher = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "252": "SELECT publisher_name, MAX(speed) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE attribute_name = 'Speed' GROUP BY publisher_name;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name, AVG(hero_attribute.attribute_value) as avg_intelligence FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id GROUP BY superhero.superhero_name ORDER BY avg_intelligence ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT race FROM superhero WHERE superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_name = 'durability' AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND hero_attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT COUNT(*) FROM superhero WHERE alignment = 'Self-interest' AND publisher = 'Marvel';\t----- bird -----\tsuperhero",
    "260": "SELECT publisher_name, COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE name IN ('DC Comics', 'Marvel Comics')) GROUP BY publisher_name;\t----- bird -----\tsuperhero",
    "261": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2;\t----- bird -----\tsuperhero",
    "264": "SELECT h.superhero_name, hp.power_name FROM superhero h JOIN hero_power hp ON h.id = hp.hero_id WHERE h.gender_id = 1 GROUP BY h.superhero_name, hp.power_name LIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name FROM superhero WHERE superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT superhero.hair_colour FROM superhero WHERE superhero.height_cm = 185;\t----- bird -----\tsuperhero",
    "267": "SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name FROM superhero WHERE gender = 'Male' AND weight > (SELECT AVG(weight) FROM superhero WHERE gender = 'Male') * 0.79;\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Stealth');\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'Strength' ORDER BY attribute_value DESC LIMIT 1) LIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name, COUNT(superhero_power.power_id) as durability_count FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY durability_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT superhero.id, superhero.gender, colour.colour FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') AND gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, superhero.publisher_id FROM superhero WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.eye_colour_id = superhero.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND skin_colour = 'Blue';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.id, superhero.height_cm FROM superhero WHERE superhero.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Amber');\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = (SELECT attribute.id FROM attribute WHERE attribute.attribute_name = 'eye_colour') AND hero_attribute.attribute_value = (SELECT colour.id FROM colour WHERE colour.colour = 'black') INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = (SELECT attribute.id FROM attribute WHERE attribute.attribute_name = 'hair_colour') AND hero_attribute.attribute_value = (SELECT colour.id FROM colour WHERE colour.colour = 'black');\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name FROM superhero WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) FROM hero_attribute WHERE attribute_name = 'strength' ORDER BY attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "281": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND publisher_id = 1) FROM superhero WHERE gender_id = 2 AND publisher_id = 1;\t----- bird -----\tsuperhero",
    "282": "SELECT superhero.weight_kg FROM superhero WHERE superhero.superhero_name = 'Emil Blonsky' UNION ALL SELECT superhero.weight_kg FROM superhero WHERE superhero.superhero_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT superhero.superhero_name, superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name, MAX(speed) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Speed' GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "286": "SELECT * FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye_colour' AND attribute.attribute_value = 3 AND attribute.attribute_name = 'hair_colour' AND attribute.attribute_value = 4;\t----- bird -----\tsuperhero",
    "288": "SELECT publisher_name FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 2) FROM superhero WHERE eye_colour_id = 2;\t----- bird -----\tsuperhero",
    "290": "SELECT gender, COUNT(*) FROM superhero GROUP BY gender;\t----- bird -----\tsuperhero",
    "291": "SELECT hair_colour FROM superhero WHERE full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT COUNT(*) FROM superhero WHERE weight_kg IS NULL AND (eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') OR eye_colour_id IS NULL) - (eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') OR eye_colour_id IS NULL) = 0;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'Green');\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT gender FROM superhero WHERE superpower = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT publisher_name, COUNT(*) FROM superhero WHERE publisher_name IN ('DC', 'Marvel Comics') GROUP BY publisher_name;\t----- bird -----\tsuperhero",
    "297": "SELECT users.display_name, users.reputation FROM users WHERE users.display_name IN ('Harlan', 'Jarrod Dixon') ORDER BY users.reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT users.DisplayName FROM users WHERE users.CreationDate BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT UserDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation' ORDER BY posts.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT UserId FROM users WHERE Age > 65) AND Score > 19;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) FROM posts p WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "306": "SELECT COUNT(*) FROM posts WHERE score > 5 AND owner_age > 65;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.Id, COUNT(pl.Id) FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE pl.CreationDate = '2014-04-23 20:29:39' AND pl.LinkTypeId = 2 AND p.UserId = 3025 GROUP BY p.Id;\t----- bird -----\tcodebase_community",
    "308": "SELECT p.Title, p.Body, p.TagName, p.AcceptedAnswerId FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT UserDisplayName FROM votes WHERE Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(posts.Id) as PostCount, COUNT(votes.Id) as VoteCount FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE users.Id = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT COUNT(*) FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT comments.Text FROM comments WHERE comments.Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.UserId, comments.Text FROM comments INNER JOIN postHistory ON comments.PostId = postHistory.PostId WHERE postHistory.PostTitle = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": "SELECT UserId FROM Votes WHERE PostTitle = 'Variance' AND BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(v.ViewCount) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Tags = 'humor'; SELECT p.Title, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Tags = 'humor';\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) FROM users WHERE badge_count > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT users.id, users.display_name, post_history.creation_date FROM users INNER JOIN post_history ON users.id = post_history.user_id WHERE COUNT(post_history.id) = 1 AND post_history.view_count >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT (COUNT(*) FROM badges WHERE YEAR(Date) = 2011) - (COUNT(*) FROM badges WHERE YEAR(Date) = 2010) * 100.0 / (COUNT(*) FROM badges WHERE YEAR(Date) = 2011);\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(up_votes) AS avg_up_votes, AVG(age) AS avg_age FROM users WHERE post_count > 10;\t----- bird -----\tcodebase_community",
    "324": "SELECT (COUNT(votes.id) * 100.0 / (SELECT COUNT(votes.id) FROM votes WHERE votes.creation_date BETWEEN '2010-01-01' AND '2011-12-31')) FROM votes WHERE votes.creation_date BETWEEN '2010-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id FROM posts p WHERE p.OwnerDisplayName = 'slashnick' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT p.Title, COUNT(p.Id) AS ViewCount FROM posts p WHERE p.OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY p.Title ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT t.TagName FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE p.OwnerDisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT (COUNT(*) FROM posts WHERE PostTypeId = 2) * 100.0 / (SELECT COUNT(*) FROM posts) FROM posts WHERE PostTypeId = 2;\t----- bird -----\tcodebase_community",
    "329": "SELECT (SUM(p.ViewCount) FROM posts p WHERE p.OwnerDisplayName = 'Mornington') - (SUM(p.ViewCount) FROM posts p WHERE p.OwnerDisplayName = 'Amos');\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(COUNT(post_links.id)) FROM post_links INNER JOIN posts ON post_links.post_id = posts.id WHERE posts.answer_count <= 2 AND YEAR(posts.creation_date) = 2010;\t----- bird -----\tcodebase_community",
    "331": "SELECT votes.CreationDate FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Autobiographer' ORDER BY badges.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(*) FROM users WHERE Location = 'United Kingdom' AND (SELECT COUNT(*) FROM postHistory WHERE PostId = users.Id AND FavoriteCount >= 4) > 0;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.id, p.title FROM posts p JOIN users u ON p.owner_user_id = u.id WHERE u.display_name = 'Harvey Motulsky' ORDER BY p.views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreationDate BETWEEN '2010-01-01' AND '2010-12-31' ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000)) FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.Title, SUM(ph.ViewCount) FROM posts p JOIN postHistory ph ON p.Id = ph.PostId WHERE p.Title = 'Computer Game Datasets' GROUP BY p.Title;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE post_id = (SELECT id FROM posts ORDER BY score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT\n            (COUNT(*) FILTER (WHERE posts.OwnerUserId = (SELECT users.Id FROM users ORDER BY users.Reputation DESC LIMIT 1))) * 100.0 / (SELECT COUNT(*) FROM posts) AS Percentage,\n            (COUNT(*) FILTER (WHERE posts.OwnerUserId = (SELECT users.Id FROM users ORDER BY users.Reputation DESC LIMIT 1) AND posts.Score > 50)) * 100.0 / (COUNT(*) FILTER (WHERE posts.OwnerUserId = (SELECT users.Id FROM users ORDER BY users.Reputation DESC LIMIT 1))) AS PercentageWithScoreAbove50\n        FROM posts;\t----- bird -----\tcodebase_community",
    "341": "SELECT t.ExcerptPostId, t.WikiPostId FROM tags t WHERE t.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE comments.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT p.Id, p.Title, c.Score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Views BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE comments.CommentCount = 1 AND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10 AND up_votes = 0;\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE foil = 'incredibly powerful'\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE borderColor = 'None' AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "348": "SELECT name FROM cards WHERE rarity = 'Mythic' AND format = 'Gladiator' AND isBanned = true;\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type = 'Artifact' AND cards.hasAlternativeDeckLimit = 0 AND cards.hasContentWarning = 0 AND cards.hasFoil = 0 AND cards.hasNonFoil = 0 AND cards.isAlternative = 0 AND cards.isFullArt = 1 AND cards.isOnlineOnly = 0 AND cards.isOversized = 0 AND cards.isPromo = 0 AND cards.isReprint = 0 AND cards.isReserved = 0 AND cards.isStarter = 0 AND cards.isStorySpotlight = 0 AND cards.isTextless = 0 AND cards.isTimeshifted = 0 AND cards.keywords = 'Artifact' AND cards.layout = 'Single' AND cards.subtypes = 'Artifact' AND cards.supertypes = 'Artifact' AND cards.types = 'Artifact' AND legalities.format = 'Vintage';\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'Commander' AND cards.power IS NULL;\t----- bird -----\tcard_games",
    "351": "SELECT c.name, r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.illustrator = 'Stephen Daniel' AND (r.date IS NULL OR r.date < '2022-01-01');\t----- bird -----\tcard_games",
    "352": "SELECT name, artist, COUNT(*) as ruling_count FROM rulings GROUP BY name, artist, is_promo ORDER BY ruling_count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT language, COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified' GROUP BY language;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = 'Infinite';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT r.text FROM rulings r WHERE r.uuid = (SELECT uuid FROM cards WHERE name = 'Benalish Knight');\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(*) FILTER (WHERE borderColor = 'None')) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT language, COUNT(*) as count FROM cards WHERE isStorySpotlight = 1 GROUP BY language;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype != 'Angel';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards WHERE isBanned = 1 AND borderColor = 'White';\t----- bird -----\tcard_games",
    "362": "SELECT name, text FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.uuid WHERE type = 'Artifact' AND color = 'black' AND language != 'English';\t----- bird -----\tcard_games",
    "363": "SELECT name, convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'paper' AND mtgo = 'yes';\t----- bird -----\tcard_games",
    "364": "SELECT id, COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND text IS NULL GROUP BY id;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Commander' AND set_translations.language = 'Brazilian Portuguese';\t----- bird -----\tcard_games",
    "366": "SELECT type FROM cards WHERE language = 'German';\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power = 'unknown' AND flavorText LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards WHERE format = 'Pre-Modern' AND ruling_text = 'This is a triggered mana ability.' AND num_faces = 1;\t----- bird -----\tcard_games",
    "369": "SELECT f.name FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.artist = 'Matthew D. Wilson' AND c.type = 'Creature' AND c.layout = 'normal' AND c.borderColor = 'black';\t----- bird -----\tcard_games",
    "370": "SELECT language FROM sets WHERE code = 'RNA' AND totalSetSize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(*) FROM cards WHERE format = 'commander' AND legalStatus = 'legal') * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander') - (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legalStatus = 'legal' AND hasContentWarning = 1) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander') FROM cards;\t----- bird -----\tcard_games",
    "372": "SELECT language, COUNT(*) as count FROM cards WHERE power = 0 GROUP BY language;\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE layout = 'normal';\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation FROM set_translations WHERE set_translations.setCode = 'ANC';\t----- bird -----\tcard_games",
    "379": "SELECT * FROM cards WHERE name = 'Ancestor''s Chosen' AND language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards WHERE setCode = 'Hauptset Zehnte Edition' AND artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT set_translations.translation FROM set_translations WHERE set_translations.language = 'Simplified Chinese' AND set_translations.setCode = 'Eighth Edition';\t----- bird -----\tcard_games",
    "382": "SELECT * FROM cards WHERE name = 'Angel of Mercy' AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM sets WHERE block = 'Ice Age' AND set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "384": "SELECT * FROM sets WHERE name = 'Adarkar Valkyrie' AND isForeignOnly = 1;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE language = 'Italian' AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT artist FROM cards WHERE setCode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') GROUP BY artist HAVING COUNT(*) > 1;\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND power IS NULL;\t----- bird -----\tcard_games",
    "388": "SELECT flavorText FROM foreign_data WHERE name = 'Ancestor\\'s Chosen' AND language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT r.text FROM rulings r INNER JOIN sets s ON r.uuid = s.uuid WHERE s.code = 'Coldsnap' AND s.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT name FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE setCode = 'Coldsnap' AND language = 'Italian' ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "391": "SELECT PERCENTAGE(COUNT(*) FILTER (WHERE convertedManaCost = 7) FROM cards WHERE setCode = 'Coldsnap') FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost = 7;\t----- bird -----\tcard_games",
    "392": "SELECT (COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost > 6) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap');\t----- bird -----\tcard_games",
    "393": "SELECT play_format, COUNT(*) FROM play_formats WHERE banned = true GROUP BY play_format;\t----- bird -----\tcard_games",
    "394": "SELECT name, banned_play_format FROM cards WHERE edhrec_rank = 1;\t----- bird -----\tcard_games",
    "395": "SELECT name FROM cards WHERE setCode = 'HOU' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese' = FALSE AND set_translations.language = 'Korean' = TRUE;\t----- bird -----\tcard_games",
    "397": "SELECT f.frame_style, c.name FROM frames f JOIN card_artists ca ON f.id = ca.frame_id JOIN cards c ON ca.card_id = c.id WHERE artist = 'Allen Williams' GROUP BY f.frame_style, c.name HAVING COUNT(DISTINCT c.name) > 1;\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(*) FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(COUNT(DISTINCT a.atom_id)) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'single' AND a.element = 'O';\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(COUNT(*)) FROM molecule WHERE label = 'carcinogenic' AND bond_type = 'single';\t----- bird -----\ttoxicology",
    "401": "SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "402": "SELECT molecule_id, COUNT(*) as double_bond_count FROM molecule WHERE label = 'double bond' GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT element FROM bond WHERE bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT element FROM bond WHERE bond_type = 'double' GROUP BY element;\t----- bird -----\ttoxicology",
    "405": "SELECT m.label, COUNT(a.atom_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Hydrogen' GROUP BY m.label ORDER BY COUNT(a.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20';\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Iodine' AND a.element = 'Sulfur' AND a.bond_type = 'Single';\t----- bird -----\ttoxicology",
    "409": "SELECT COUNT(*) FROM molecule WHERE molecule_type = 'carcinogenic' AND element != 'Fluorine';\t----- bird -----\ttoxicology",
    "410": "SELECT COUNT(*) FROM molecule WHERE molecule.label = 'carcinogenic' AND molecule.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "411": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY COUNT(*) DESC LIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT (COUNT(*) FROM bond WHERE molecule_id = 'TR008' AND bond_type = 'double') * 100.0 / (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR008') FROM bond WHERE molecule_id = 'TR008' AND bond_type = 'double';\t----- bird -----\ttoxicology",
    "413": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic') FROM molecule WHERE label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "414": "SELECT SUM(CASE WHEN atom.element = 'Hydrogen' THEN 1.0 ELSE 0.0 END) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206') FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.label, COUNT(c.atom_id) as bond_count FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id WHERE bond_type = 'single' AND NOT carcinogenic GROUP BY m.label ORDER BY bond_count DESC LIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected WHERE atom_id = 12 AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009');\t----- bird -----\ttoxicology",
    "419": "SELECT bond_type, atom_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) FROM connected WHERE atom_id = 19;\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004');\t----- bird -----\ttoxicology",
    "422": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id BETWEEN 21 AND 25 AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'phosphorus' OR atom.element = 'nitrogen';\t----- bird -----\ttoxicology",
    "424": "SELECT m.label, COUNT(b.bond_id) as double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double' GROUP BY m.label ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(COUNT(DISTINCT bond_id)) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE element = 'Iodine';\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT element FROM atom WHERE NOT EXISTS (SELECT * FROM connected WHERE atom.element = connected.atom_id2)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR041' AND b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "428": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = 'TR144_8_19') GROUP BY a.element;\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT element FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "430": "SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND carcinogenic = true;\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('phosphorus', 'bromine') AND (SELECT COUNT(*) FROM bond b WHERE b.molecule_id = m.molecule_id AND b.bond_type = 'triple') > 0;\t----- bird -----\ttoxicology",
    "432": "SELECT SUM(CASE WHEN element = 'Cl' AND bond_type = 'single' THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond_type = 'single' AND element = 'Cl';\t----- bird -----\ttoxicology",
    "433": "SELECT element FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT (COUNT(*) FILTER (WHERE element = 'Cl' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'))) * 100.0 / (COUNT(*) FILTER (WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'))) FROM atom;\t----- bird -----\ttoxicology",
    "435": "SELECT m.label, COUNT(DISTINCT a.element) FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.label = 'carcinogenic' AND a.element = 'toxicology' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "436": "SELECT label, COUNT(*) as hydrogen_count FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule_id = 'TR006' AND element = 'Hydrogen' GROUP BY label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.label, COUNT(a.atom_id) as atom_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label NOT LIKE '%carcinogenic%' GROUP BY m.label HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 400 AND satscores.rtype = 'Virtual';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT DISTINCT CDSCode FROM schools WHERE Enrollment > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(frpm.Percent (%) Eligible FRPM (Ages 5-17)) FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.NumTstTakr > 100 AND satscores.AvgScrRead > 500 AND satscores.AvgScrMath > 500 AND satscores.AvgScrWrite > 500 AND satscores.NumGE1500 > 100;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.CDSCode, s.CharterNum, AVG(ss.AvgScrWrite) as AvgWrite FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.AvgScrWrite > 499 GROUP BY s.CDSCode, s.CharterNum ORDER BY AvgWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.School, schools.Street, schools.StreetAbr, schools.City, schools.Zip, schools.State FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Enrollment(K-12) - frpm.Enrollment(Ages 5-17) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT schools.SchoolName FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Percent_Eligible_Free_K12 > 0.1 AND satscores.NumTstTakr >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.StatusType, s.FundingType FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' AND ss.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.SchoolName, s.Street, s.City, s.State, s.Zip FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.StatusType = 'High School' AND s.County = 'Monterey' AND f.`County Code` = 'Monterey' AND f.`District Code` = 1 AND f.`School Code` IS NOT NULL AND f.`Enrollment (Ages 15-17)` > 800 AND f.`Free Meal Count (Ages 15-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone, schools.Ext FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate > '1991-01-01' AND schools.ClosedDate < '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.SchoolName, s.DOCType FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Charter = 0 AND f.DistrictType = 'Local' GROUP BY s.SchoolName, s.DOCType HAVING AVG(f.Enrollment(K-12) - f.Enrollment(Ages 5-17)) > (SELECT AVG(d.Enrollment(K-12) - d.Enrollment(Ages 5-17)) FROM schools d WHERE d.Charter = 0 AND d.DistrictType = 'Local')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT frpm.SchoolCode, frpm.Percent (%) Eligible Free (K-12) FROM frpm ORDER BY frpm.Enrollment (K-12) DESC LIMIT 10 OFFSET 10;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT frpm.SchoolName, frpm.Percent(%) Eligible Free (K-12) FROM frpm INNER JOIN schools ON frpm.SchoolCode = schools.CDSCode WHERE schools.OwnershipCode = 66 ORDER BY frpm.FRPM Count (K-12) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Percent (%) Eligible FRPM (K-12)` = (SELECT MIN(p) FROM frpm p) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.Name, a.Name FROM schools s JOIN satscores a ON s.CDSCode = a.cds WHERE a.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores) AND a.AvgScrRead >= 1500 AND a.AvgScrMath >= 1500 AND a.AvgScrWrite >= 1500;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Academic Year = '2013-2014' AND frpm.County Code = 'Fresno' ORDER BY frpm.FRPM Count (K-12) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT DISTINCT s.Name FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.Virtual = 1 AND ss.rtype = 'reading' ORDER BY ss.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(ss.AvgScrWrite) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.DOC = 'Ricci Ulrich' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT state, COUNT(*) FROM schools WHERE StatusType = 'Special Education' AND Grade BETWEEN 1 AND 12 GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT AVG(COUNT(DISTINCT school)) FROM schools WHERE County = 'Alameda' AND District = 'Elementary School District' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged Unified School District' DIVIDE BY COUNT(*) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged Elementary School District';\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Name, s.Street, s.StreetAbr, s.City, s.Zip FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.AvgScrMath = (SELECT AVG(AvgScrMath) FROM satscores ORDER BY AvgScrMath DESC LIMIT 7 OFFSET 1)\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) FROM frpm WHERE County = 'Los Angeles' AND Charter = 0 AND Percent (%) Eligible Free (K-12) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT COUNT(*) FROM schools WHERE County = 'Alameda' AND District = 'Fremont' AND School = 'State Special School' AND Academic Year = '2014-2015' AND Age BETWEEN 5 AND 17;\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.SchoolName, frpm.Percent (%) Eligible FRPM (Ages 5-17) FROM schools s JOIN frpm ON s.CDSCode = frpm.CDSCode WHERE s.County = 'Los Angeles' AND s.DistrictType = 'Elementary' AND s.SchoolType = 'Public' AND s.EducationalOptionType = 'Kindergarten to 9th Grade';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) FROM frpm WHERE `Academic Year` BETWEEN '2018-19' AND '2019-20' AND `County Code` IN (SELECT CountyCode FROM counties WHERE CountyName IN ('San Diego', 'Santa Barbara')) AND `District Code` IS NULL GROUP BY County;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.GradeSpan FROM schools WHERE schools.Longitude = (SELECT MAX(schools.Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(DISTINCT city) FROM schools WHERE magnet = 1 AND grade_span = 'K-8' AND provision_type = 'Multiple';\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.DistrictCode, frpm.Percent(%) Eligible Free (K-12) FROM frpm WHERE frpm.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.AdmEmail1 FROM schools WHERE schools.County = 'San Bernardino' AND schools.City = 'San Bernardino' AND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND schools.StatusType = 'Public' AND schools.SchoolType IN ('Intermediate/Middle Schools', 'Unified Schools');\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND type = 'issuance' AND operation = 'after_transaction';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district_id) FROM district WHERE female_avg_salary BETWEEN 6000 AND 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) FROM client WHERE gender = 'male' AND district = 'North Bohemia' AND salary > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT client.account_id, MAX(client.average_salary) - MIN(client.average_salary) FROM client WHERE gender = 'Female' GROUP BY client.account_id ORDER BY MAX(client.average_salary) - MIN(client.average_salary) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT client_id, MIN(age), MAX(avg_salary) FROM client GROUP BY client_id ORDER BY MIN(age) ASC, MAX(avg_salary) DESC;\t----- bird -----\tfinancial",
    "473": "SELECT account_id, MIN(approved_amount) FROM loan WHERE YEAR(approved_date) = 1997 AND status = 'Approved' AND issuance_frequency = 'Weekly' GROUP BY account_id;\t----- bird -----\tfinancial",
    "474": "SELECT account_id, SUM(amount) as total_approved FROM loan WHERE validity > 12 MONTHS AND account_opening_date = '1993-01-01' GROUP BY account_id ORDER BY total_approved DESC LIMIT 10;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) FROM client WHERE gender = 'Female' AND birth_date < '1950-01-01' AND district_id = 1;\t----- bird -----\tfinancial",
    "476": "SELECT district FROM client WHERE gender = 'Female' AND birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT district_id, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE A15 = 1)) as percentage FROM district WHERE A15 = 1 GROUP BY district_id ORDER BY percentage DESC LIMIT 1;\t----- bird -----\tfinancial",
    "478": "SELECT client_id, (balance_2000 - balance_1993) / balance_1993 * 100 FROM client JOIN trans ON client.account_id = trans.account_id WHERE trans.date BETWEEN '1993-07-05' AND '1993-07-05' AND trans.type = 'loan' ORDER BY trans.date LIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT (COUNT(*) FROM loan WHERE status = 'Fully Paid') * 100.0 / (SELECT COUNT(*) FROM loan) as percentage;\t----- bird -----\tfinancial",
    "480": "SELECT district_id, PERCENTAGE(COUNT(*) FILTER (WHERE loan_id IS NOT NULL AND loan_id < 100000000)) FROM loan WHERE loan_id IS NOT NULL AND loan_id < 100000000 GROUP BY district_id;\t----- bird -----\tfinancial",
    "481": "SELECT district, state, (percentage_unemployment_rate_1996 - percentage_unemployment_rate_1995) as increment FROM district WHERE loans_contract_status = 'running' AND client_debt > 0;\t----- bird -----\tfinancial",
    "482": "SELECT district_id, COUNT(*) FROM client WHERE gender = 'Female' GROUP BY district_id ORDER BY COUNT(*) DESC LIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) FROM loan WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND frequency = 'monthly';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND status = 'Running';\t----- bird -----\tfinancial",
    "485": "SELECT district_id, COUNT(*) FROM district WHERE year = 1995 AND crimes = (SELECT MAX(crimes) FROM district WHERE year = 1995 AND crimes < (SELECT MAX(crimes) FROM district WHERE year = 1995)) GROUP BY district_id;\t----- bird -----\tfinancial",
    "486": "SELECT district_name, SUM(amount) FROM withdrawal WHERE type = 'non-credit card' AND month = 'January' AND year = 1996 GROUP BY district_name ORDER BY SUM(amount) DESC LIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND frequency = 'Running';\t----- bird -----\tfinancial",
    "488": "SELECT district_id, COUNT(*) FROM district WHERE year = 1995 AND crimes = (SELECT MAX(crimes) FROM district WHERE year = 1995 AND crimes < (SELECT MAX(crimes) FROM district WHERE year = 1995)) GROUP BY district_id;\t----- bird -----\tfinancial",
    "489": "SELECT account_id FROM card INNER JOIN trans ON card.disp_id = trans.account_id WHERE trans.date = '1998-01-01' AND trans.type = 'credit' AND trans.amount < (SELECT AVG(trans.amount) FROM trans WHERE trans.date = '1998-01-01' AND trans.type = 'credit');\t----- bird -----\tfinancial",
    "490": "SELECT account_type, AVG(income) FROM account JOIN district ON account.district_id = district.district_id WHERE account_type NOT IN ('Savings', 'Checking') AND district.income BETWEEN 8000 AND 9000 GROUP BY account_type;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(crimes) FROM crimes WHERE year = 1995 AND region IN (SELECT region FROM regions WHERE region_id IN (SELECT region_id FROM regions WHERE accounts > 4000 AND year >= 1997)) GROUP BY region HAVING COUNT(*) > 4000;\t----- bird -----\tfinancial",
    "492": "SELECT trans.trans_id, trans.date, trans.amount FROM trans WHERE trans.account_id = 3356 AND trans.type = 'withdrawal' AND trans.operation = 'cash';\t----- bird -----\tfinancial",
    "493": "SELECT district_id, AVG(salary) as avg_salary FROM district WHERE avg_salary > 10000 GROUP BY district_id;\t----- bird -----\tfinancial",
    "494": "SELECT client_id, AVG(loan_id) as avg_loan_id FROM client WHERE gender = 'Male' AND birth_date BETWEEN '1996-01-01' AND '1997-12-31' GROUP BY client_id;\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) FROM account WHERE account_id = 3; SELECT account_id, aim FROM trans WHERE account_id = 3 AND amount = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT PERCENTAGE(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE gender = 'Male')) FROM client WHERE gender = 'Male' AND request = 'Weekly Statement';\t----- bird -----\tfinancial",
    "497": "SELECT client.account_id FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'Female' ORDER BY client.birth_date DESC, district.A10 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) FROM loan WHERE loan.status = 'on_running' AND loan.date >= (SELECT MAX(trans.date) FROM trans WHERE trans.operation = 'statement_issuance')\t----- bird -----\tfinancial",
    "499": "SELECT client_id, age FROM client INNER JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'high level' AND disp.status = 'eligible' AND disp.type = 'credit card';\t----- bird -----\tfinancial"
}